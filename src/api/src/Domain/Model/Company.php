<?php
/*
 * This file has been automatically generated by TDBM.
 * You can edit this file as it will not be overwritten.
 */

declare(strict_types=1);

namespace App\Domain\Model;

use App\Domain\Exception\InvalidStringValue;
use App\Domain\Logging\LoggableModel;
use App\Domain\Model\Generated\AbstractCompany;
use TheCodingMachine\GraphQLite\Annotations\Field;
use TheCodingMachine\GraphQLite\Annotations\Logged;
use TheCodingMachine\GraphQLite\Annotations\Type;
use TheCodingMachine\TDBM\AlterableResultIterator;

/**
 * The Company class maps the 'companies' table in database.
 *
 * @Type
 */
class Company extends AbstractCompany implements LoggableModel
{
    /**
     * @throws InvalidStringValue
     */
    public function setName(string $name): void
    {
        $property = 'name';
        InvalidStringValue::notBlank($name, $property);
        InvalidStringValue::length($name, 1, 255, $property);
        parent::setName($name);
    }

    /**
     * @throws InvalidStringValue
     */
    public function setCode(string $code): void
    {
        $property = 'code';
        InvalidStringValue::notBlank($code, $property);
        InvalidStringValue::length($code, 1, 255, $property);
        parent::setCode($code);
    }

    /**
     * @Field
     * @Logged
     */
    public function getSalesforceLink(): ?string
    {
        return parent::getSalesforceLink();
    }

    /**
     * @return string[]|null
     *
     * @Field
     */
    public function getFunctions(): ?array
    {
        /** @var string[] $result */
        $result = parent::getFunctions();

        return $result;
    }

    /**
     * @return string[]|null
     *
     * @Field
     */
    public function getServices(): ?array
    {
        /** @var string[] $result */
        $result = parent::getServices();

        return $result;
    }

    /**
     * @return Program[]|AlterableResultIterator
     *
     * @Field
     * @Logged
     */
    public function getPrograms(): AlterableResultIterator
    {
        return parent::getPrograms();
    }

    /**
     * @return User[]|AlterableResultIterator
     *
     * @Field
     * @Logged
     */
    public function getUsers(): AlterableResultIterator
    {
        return parent::getUsers();
    }
}
