<?php
/**
 * This file has been automatically generated by TDBM.
 *
 * DO NOT edit this file, as it might be overwritten.
 * If you need to perform changes, edit the ProgramPic class instead!
 */

declare(strict_types=1);

namespace App\Domain\Model\Generated;

use App\Domain\Model\Program;
use App\Domain\Model\ProgramModel;
use App\Domain\Model\User;
use App\Domain\Model\Company;
use TheCodingMachine\TDBM\ResultIterator;
use TheCodingMachine\TDBM\AlterableResultIterator;
use Ramsey\Uuid\Uuid;
use JsonSerializable;
use TheCodingMachine\TDBM\Schema\ForeignKeys;
use TheCodingMachine\GraphQLite\Annotations\Field as GraphqlField;

/**
 * The AbstractProgramPic class maps the 'program_pic' table in database.
 */
abstract class AbstractProgramPic extends Program implements JsonSerializable
{

    /**
     * @var \TheCodingMachine\TDBM\Schema\ForeignKeys
     */
    private static $foreignKeys = null;

    /**
     * The constructor takes all compulsory arguments.
     *
     * @param string $name
     * @param string $description
     * @param string $type
     */
    public function __construct(string $name, string $description, string $type)
    {
        parent::__construct($name, $description, $type);
        $this->setAppointmentTimeLimit(0);
    }

    /**
     * The getter for the "appointment_time_limit" column.
     *
     * @return int
     * @GraphqlField
     */
    public function getAppointmentTimeLimit() : int
    {
        return $this->get('appointment_time_limit', 'program_pic');
    }

    /**
     * The setter for the "appointment_time_limit" column.
     *
     * @param int $appointment_time_limit
     */
    public function setAppointmentTimeLimit(int $appointment_time_limit) : void
    {
        $this->set('appointment_time_limit', $appointment_time_limit, 'program_pic');
    }

    /**
     * The getter for the "link_id" column.
     *
     * @return string|null
     * @GraphqlField
     */
    public function getLinkId() : ?string
    {
        return $this->get('link_id', 'program_pic');
    }

    /**
     * The setter for the "link_id" column.
     *
     * @param string|null $link_id
     */
    public function setLinkId(?string $link_id) : void
    {
        $this->set('link_id', $link_id, 'program_pic');
    }

    /**
     * The getter for the "inscription_text" column.
     *
     * @return string|null
     * @GraphqlField
     */
    public function getInscriptionText() : ?string
    {
        return $this->get('inscription_text', 'program_pic');
    }

    /**
     * The setter for the "inscription_text" column.
     *
     * @param string|null $inscription_text
     */
    public function setInscriptionText(?string $inscription_text) : void
    {
        $this->set('inscription_text', $inscription_text, 'program_pic');
    }

    /**
     * Internal method used to retrieve the list of foreign keys attached to this bean.
     */
    protected static function getForeignKeys(string $tableName) : \TheCodingMachine\TDBM\Schema\ForeignKeys
    {
        if ($tableName === 'program_pic') {
            if (self::$foreignKeys === null) {
                self::$foreignKeys = new ForeignKeys([

                ]);
            }
            return self::$foreignKeys;
        }
        return parent::getForeignKeys($tableName);
    }

    /**
     * Serializes the object for JSON encoding.
     *
     * @param bool $stopRecursion Parameter used internally by TDBM to stop embedded
     * objects from embedding other objects.
     * @return array
     */
    public function jsonSerialize(bool $stopRecursion = false)
    {
        $array = parent::jsonSerialize($stopRecursion);
        $array['appointmentTimeLimit'] = $this->getAppointmentTimeLimit();
        $array['linkId'] = $this->getLinkId();
        $array['inscriptionText'] = $this->getInscriptionText();
        return $array;
    }

    /**
     * Returns an array of used tables by this bean (from parent to child
     * relationship).
     *
     * @return string[]
     */
    public function getUsedTables() : array
    {
        $tables = parent::getUsedTables();
        $tables[] = 'program_pic';

        return $tables;
    }

    public function __clone()
    {
        parent::__clone();
        $this->setId(Uuid::uuid1()->toString());
    }
}
