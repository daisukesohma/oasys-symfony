<?php
/*
 * This file has been automatically generated by TDBM.
 * You can edit this file as it will not be overwritten.
 */

declare(strict_types=1);

namespace App\Infrastructure\Dao;

use App\Domain\Exception\NotFound;
use App\Domain\Model\ProgramCoachingIndividual;
use App\Domain\Repository\ProgramCoachingIndividualRepository;
use App\Domain\Repository\UserRepository;
use App\Infrastructure\Dao\Generated\AbstractProgramCoachingIndividualDao;
use App\Infrastructure\Logging\ModelLogger;
use Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface;
use TheCodingMachine\TDBM\TDBMService;

/**
 * The ProgramCoachingIndividualDao class will maintain the persistence of ProgramCoachingIndividual class into the program_coaching_individuals table.
 */
class ProgramCoachingIndividualDao extends AbstractProgramCoachingIndividualDao implements ProgramCoachingIndividualRepository
{
    use ModelLogger;

    private TokenStorageInterface $tokenStorage;
    private UserRepository $userRepository;

    public function __construct(TDBMService $tdbmService, TokenStorageInterface $tokenStorage, UserRepository $userRepository)
    {
        $this->tokenStorage = $tokenStorage;
        $this->userRepository = $userRepository;
        parent::__construct($tdbmService);
    }

    protected function getTokenStorage(): TokenStorageInterface
    {
        return $this->tokenStorage;
    }

    protected function getUserRepository(): UserRepository
    {
        return $this->userRepository;
    }

    public function save(ProgramCoachingIndividual $programCoachingIndividual): void
    {
        $this->log($programCoachingIndividual);
        parent::save($programCoachingIndividual);
    }

    public function mustFindOneById(string $id): ProgramCoachingIndividual
    {
        $event = $this->findOne(['id' => $id]);
        if ($event === null) {
            throw new NotFound(ProgramCoachingIndividual::class, ['id' => $id]);
        }

        return $event;
    }

    public function findOneById(string $id): ?ProgramCoachingIndividual
    {
        return $this->findOne(['id' => $id]);
    }
}
